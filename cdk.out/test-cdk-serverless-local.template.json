{
 "Resources": {
  "courselocalServiceRole47834F7A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/course-local/ServiceRole/Resource"
   }
  },
  "courselocal47E348A5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "4fb27c3ca67fe6528a29ff1fd7450ac2df3d9ddcb4634a71b36ff52956e0e570.zip"
    },
    "Environment": {
     "Variables": {
      "MONGODB_URI": "localhost:db",
      "frontendUrl": "${env.frontendUrl}",
      "functionName": "course-local",
      "cors": "${env.cors}"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "courselocalServiceRole47834F7A",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x"
   },
   "DependsOn": [
    "courselocalServiceRole47834F7A"
   ],
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/course-local/Resource",
    "aws:asset:path": "asset.4fb27c3ca67fe6528a29ff1fd7450ac2df3d9ddcb4634a71b36ff52956e0e570",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "authlocalServiceRole5F1DABA5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/auth-local/ServiceRole/Resource"
   }
  },
  "authlocalE4FF3CC9": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "4fb27c3ca67fe6528a29ff1fd7450ac2df3d9ddcb4634a71b36ff52956e0e570.zip"
    },
    "Environment": {
     "Variables": {
      "MONGODB_URI": "localhost:db",
      "frontendUrl": "${env.frontendUrl}",
      "functionName": "auth-local",
      "cors": "${env.cors}"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "authlocalServiceRole5F1DABA5",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x"
   },
   "DependsOn": [
    "authlocalServiceRole5F1DABA5"
   ],
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/auth-local/Resource",
    "aws:asset:path": "asset.4fb27c3ca67fe6528a29ff1fd7450ac2df3d9ddcb4634a71b36ff52956e0e570",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "authlocaltestcdkserverlesslocalTokenAuthorizercustomauth31912A0APermissions80589A67": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "authlocalE4FF3CC9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myserverlessapplocal75227048"
       },
       "/authorizers/",
       {
        "Ref": "TokenAuthorizercustomauthA7AF5865"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/auth-local/testcdkserverlesslocalTokenAuthorizercustomauth31912A0A:Permissions"
   }
  },
  "TokenAuthorizercustomauthA7AF5865": {
   "Type": "AWS::ApiGateway::Authorizer",
   "Properties": {
    "AuthorizerResultTtlInSeconds": 300,
    "AuthorizerUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":",
           {
            "Fn::GetAtt": [
             "authlocalE4FF3CC9",
             "Arn"
            ]
           }
          ]
         }
        ]
       },
       ":apigateway:",
       {
        "Fn::Select": [
         3,
         {
          "Fn::Split": [
           ":",
           {
            "Fn::GetAtt": [
             "authlocalE4FF3CC9",
             "Arn"
            ]
           }
          ]
         }
        ]
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "authlocalE4FF3CC9",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    },
    "IdentitySource": "method.request.header.Authorization",
    "Name": "testcdkserverlesslocalTokenAuthorizercustomauth31912A0A",
    "RestApiId": {
     "Ref": "myserverlessapplocal75227048"
    },
    "Type": "TOKEN"
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/TokenAuthorizer-custom-auth/Resource"
   }
  },
  "myserverlessapplocal75227048": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "my-serverless-app-local"
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-serverless-app-local/Resource"
   }
  },
  "myserverlessapplocalDeploymentAF9F9E132a399e1cfc5a89d3a001e376c24077f2": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "myserverlessapplocal75227048"
    }
   },
   "DependsOn": [
    "myserverlessapplocalcourseGET3E47EAEA",
    "myserverlessapplocalcourseOPTIONSE1F07355",
    "myserverlessapplocalcourse3895C80C",
    "myserverlessapplocalOPTIONS1EDE5C6C",
    "TokenAuthorizercustomauthA7AF5865"
   ],
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-serverless-app-local/Deployment/Resource"
   }
  },
  "myserverlessapplocalDeploymentStagelocalBD3EBF93": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "myserverlessapplocalDeploymentAF9F9E132a399e1cfc5a89d3a001e376c24077f2"
    },
    "RestApiId": {
     "Ref": "myserverlessapplocal75227048"
    },
    "StageName": "local"
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-serverless-app-local/DeploymentStage.local/Resource"
   }
  },
  "myserverlessapplocalOPTIONS1EDE5C6C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "myserverlessapplocal75227048",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "myserverlessapplocal75227048"
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-serverless-app-local/Default/OPTIONS/Resource"
   }
  },
  "myserverlessapplocalcourse3895C80C": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "myserverlessapplocal75227048",
      "RootResourceId"
     ]
    },
    "PathPart": "course",
    "RestApiId": {
     "Ref": "myserverlessapplocal75227048"
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-serverless-app-local/Default/course/Resource"
   }
  },
  "myserverlessapplocalcourseOPTIONSE1F07355": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "myserverlessapplocalcourse3895C80C"
    },
    "RestApiId": {
     "Ref": "myserverlessapplocal75227048"
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-serverless-app-local/Default/course/OPTIONS/Resource"
   }
  },
  "myserverlessapplocalcourseGETApiPermissiontestcdkserverlesslocalmyserverlessapplocal5BE23D3DGETcourseE4690E73": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "courselocal47E348A5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myserverlessapplocal75227048"
       },
       "/",
       {
        "Ref": "myserverlessapplocalDeploymentStagelocalBD3EBF93"
       },
       "/GET/course"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-serverless-app-local/Default/course/GET/ApiPermission.testcdkserverlesslocalmyserverlessapplocal5BE23D3D.GET..course"
   }
  },
  "myserverlessapplocalcourseGETApiPermissionTesttestcdkserverlesslocalmyserverlessapplocal5BE23D3DGETcourse9235FEF6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "courselocal47E348A5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myserverlessapplocal75227048"
       },
       "/test-invoke-stage/GET/course"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-serverless-app-local/Default/course/GET/ApiPermission.Test.testcdkserverlesslocalmyserverlessapplocal5BE23D3D.GET..course"
   }
  },
  "myserverlessapplocalcourseGET3E47EAEA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "TokenAuthorizercustomauthA7AF5865"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "courselocal47E348A5",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "myserverlessapplocalcourse3895C80C"
    },
    "RestApiId": {
     "Ref": "myserverlessapplocal75227048"
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-serverless-app-local/Default/course/GET/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02QwW6DQAxEvyX3xSWJopxJqt6qVqT3yAGXOMAuwt6gFPHv1W6oymmePdbY8gbW+z2kKxwkKco6afgC40mxqA0Och4bbC8lwvjmbaHsrDl+2yV/Ut+yCDs7GcYWxtw1FIygk5HtGUVIBbIgRrZw8EVNekAhgx1XqDTgA8YvV5PNvF5dzz/Uh4hFlZNo1nEMnvGVusY9WrIauovqpFjFE56QkzjfFxQ3vpNeXRnMmf7cOTnyNP2349khiG0VZj68dl6X04GPzpas8QnWlQQ3eblvUljvIF3dhDnpvVVuCfKn/gLaegtWdgEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "myserverlessapplocalEndpoint169F5502": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "myserverlessapplocal75227048"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "myserverlessapplocalDeploymentStagelocalBD3EBF93"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}