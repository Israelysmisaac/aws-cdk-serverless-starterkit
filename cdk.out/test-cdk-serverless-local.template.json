{
 "Resources": {
  "hellolocalServiceRoleB656724C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/hello-local/ServiceRole/Resource"
   }
  },
  "hellolocal4BEF6333": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "498de2bdff49f1bcbb5d0725aa1bd16988a024c6eec606c42f8824f1f8649e51.zip"
    },
    "Environment": {
     "Variables": {
      "MONGODB_URI": "localhost:db",
      "frontendUrl": "${env.frontendUrl}",
      "functionName": "hello-local",
      "cors": "${env.cors}"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "hellolocalServiceRoleB656724C",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x"
   },
   "DependsOn": [
    "hellolocalServiceRoleB656724C"
   ],
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/hello-local/Resource",
    "aws:asset:path": "asset.498de2bdff49f1bcbb5d0725aa1bd16988a024c6eec606c42f8824f1f8649e51",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "connectlocalServiceRole487995D3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/connect-local/ServiceRole/Resource"
   }
  },
  "connectlocal190D4238": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "902733cd514d2e2cbf9cda772ed2322e6884fe8d97a66e59eb193fbcd17e7374.zip"
    },
    "Environment": {
     "Variables": {
      "MONGODB_URI": "localhost:db",
      "frontendUrl": "${env.frontendUrl}",
      "functionName": "connect-local",
      "cors": "${env.cors}"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "connectlocalServiceRole487995D3",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x"
   },
   "DependsOn": [
    "connectlocalServiceRole487995D3"
   ],
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/connect-local/Resource",
    "aws:asset:path": "asset.902733cd514d2e2cbf9cda772ed2322e6884fe8d97a66e59eb193fbcd17e7374",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "disconnectlocalServiceRole0BCD3A72": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/disconnect-local/ServiceRole/Resource"
   }
  },
  "disconnectlocal73EF9116": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "511de1962094010aeca938265ec9afdf832a4dd4f7c340f0ca5b6a10d4c53dd9.zip"
    },
    "Environment": {
     "Variables": {
      "MONGODB_URI": "localhost:db",
      "frontendUrl": "${env.frontendUrl}",
      "functionName": "disconnect-local",
      "cors": "${env.cors}"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "disconnectlocalServiceRole0BCD3A72",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x"
   },
   "DependsOn": [
    "disconnectlocalServiceRole0BCD3A72"
   ],
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/disconnect-local/Resource",
    "aws:asset:path": "asset.511de1962094010aeca938265ec9afdf832a4dd4f7c340f0ca5b6a10d4c53dd9",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "defaultlocalServiceRole763B94F1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/default-local/ServiceRole/Resource"
   }
  },
  "defaultlocalD20E00DC": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e4a108865879970bb7c2c379492a28196d0808f05b612307c97692e6ef1a5a03.zip"
    },
    "Environment": {
     "Variables": {
      "MONGODB_URI": "localhost:db",
      "frontendUrl": "${env.frontendUrl}",
      "functionName": "default-local",
      "cors": "${env.cors}"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "defaultlocalServiceRole763B94F1",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x"
   },
   "DependsOn": [
    "defaultlocalServiceRole763B94F1"
   ],
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/default-local/Resource",
    "aws:asset:path": "asset.e4a108865879970bb7c2c379492a28196d0808f05b612307c97692e6ef1a5a03",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "authlocalServiceRole5F1DABA5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/auth-local/ServiceRole/Resource"
   }
  },
  "authlocalE4FF3CC9": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a7fa4fc6600d9284c99f0b94d08acaa5d8a617d3622358d1ecd5676edcaa2fd4.zip"
    },
    "Environment": {
     "Variables": {
      "MONGODB_URI": "localhost:db",
      "frontendUrl": "${env.frontendUrl}",
      "functionName": "auth-local",
      "cors": "${env.cors}"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "authlocalServiceRole5F1DABA5",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x"
   },
   "DependsOn": [
    "authlocalServiceRole5F1DABA5"
   ],
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/auth-local/Resource",
    "aws:asset:path": "asset.a7fa4fc6600d9284c99f0b94d08acaa5d8a617d3622358d1ecd5676edcaa2fd4",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "authlocaltestcdkserverlesslocalTokenAuthorizercustomauth31912A0APermissions80589A67": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "authlocalE4FF3CC9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myserverlessapplocal75227048"
       },
       "/authorizers/",
       {
        "Ref": "TokenAuthorizercustomauthA7AF5865"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/auth-local/testcdkserverlesslocalTokenAuthorizercustomauth31912A0A:Permissions"
   }
  },
  "TokenAuthorizercustomauthA7AF5865": {
   "Type": "AWS::ApiGateway::Authorizer",
   "Properties": {
    "AuthorizerResultTtlInSeconds": 300,
    "AuthorizerUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":",
           {
            "Fn::GetAtt": [
             "authlocalE4FF3CC9",
             "Arn"
            ]
           }
          ]
         }
        ]
       },
       ":apigateway:",
       {
        "Fn::Select": [
         3,
         {
          "Fn::Split": [
           ":",
           {
            "Fn::GetAtt": [
             "authlocalE4FF3CC9",
             "Arn"
            ]
           }
          ]
         }
        ]
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "authlocalE4FF3CC9",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    },
    "IdentitySource": "method.request.header.Authorization",
    "Name": "testcdkserverlesslocalTokenAuthorizercustomauth31912A0A",
    "RestApiId": {
     "Ref": "myserverlessapplocal75227048"
    },
    "Type": "TOKEN"
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/TokenAuthorizer-custom-auth/Resource"
   }
  },
  "myserverlessapplocal75227048": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "my-serverless-app-local"
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-serverless-app-local/Resource"
   }
  },
  "myserverlessapplocalDeploymentAF9F9E138dd9d49078048a4890442931246b0ba1": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "myserverlessapplocal75227048"
    }
   },
   "DependsOn": [
    "myserverlessapplocalhelloGETA4EE2503",
    "myserverlessapplocalhelloOPTIONS7C6BC7B6",
    "myserverlessapplocalhello1E923776",
    "myserverlessapplocalOPTIONS1EDE5C6C",
    "TokenAuthorizercustomauthA7AF5865"
   ],
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-serverless-app-local/Deployment/Resource"
   }
  },
  "myserverlessapplocalDeploymentStagelocalBD3EBF93": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "myserverlessapplocalDeploymentAF9F9E138dd9d49078048a4890442931246b0ba1"
    },
    "RestApiId": {
     "Ref": "myserverlessapplocal75227048"
    },
    "StageName": "local"
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-serverless-app-local/DeploymentStage.local/Resource"
   }
  },
  "myserverlessapplocalOPTIONS1EDE5C6C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "myserverlessapplocal75227048",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "myserverlessapplocal75227048"
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-serverless-app-local/Default/OPTIONS/Resource"
   }
  },
  "myserverlessapplocalhello1E923776": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "myserverlessapplocal75227048",
      "RootResourceId"
     ]
    },
    "PathPart": "hello",
    "RestApiId": {
     "Ref": "myserverlessapplocal75227048"
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-serverless-app-local/Default/hello/Resource"
   }
  },
  "myserverlessapplocalhelloOPTIONS7C6BC7B6": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "myserverlessapplocalhello1E923776"
    },
    "RestApiId": {
     "Ref": "myserverlessapplocal75227048"
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-serverless-app-local/Default/hello/OPTIONS/Resource"
   }
  },
  "myserverlessapplocalhelloGETApiPermissiontestcdkserverlesslocalmyserverlessapplocal5BE23D3DGEThelloAC902B51": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "hellolocal4BEF6333",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myserverlessapplocal75227048"
       },
       "/",
       {
        "Ref": "myserverlessapplocalDeploymentStagelocalBD3EBF93"
       },
       "/GET/hello"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-serverless-app-local/Default/hello/GET/ApiPermission.testcdkserverlesslocalmyserverlessapplocal5BE23D3D.GET..hello"
   }
  },
  "myserverlessapplocalhelloGETApiPermissionTesttestcdkserverlesslocalmyserverlessapplocal5BE23D3DGEThello25985699": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "hellolocal4BEF6333",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myserverlessapplocal75227048"
       },
       "/test-invoke-stage/GET/hello"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-serverless-app-local/Default/hello/GET/ApiPermission.Test.testcdkserverlesslocalmyserverlessapplocal5BE23D3D.GET..hello"
   }
  },
  "myserverlessapplocalhelloGETA4EE2503": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "TokenAuthorizercustomauthA7AF5865"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "hellolocal4BEF6333",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "myserverlessapplocalhello1E923776"
    },
    "RestApiId": {
     "Ref": "myserverlessapplocal75227048"
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-serverless-app-local/Default/hello/GET/Resource"
   }
  },
  "mywebsocketapilocal2071B21B": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "Name": "my-websocket-api-local",
    "ProtocolType": "WEBSOCKET",
    "RouteSelectionExpression": "$request.body.action"
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-websocket-api-local/Resource"
   }
  },
  "mywebsocketapilocalconnectRouteconnectlocalPermission937137C7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "connectlocal190D4238",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "mywebsocketapilocal2071B21B"
       },
       "/*$connect"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-websocket-api-local/$connect-Route/connect-local-Permission"
   }
  },
  "mywebsocketapilocalconnectRouteconnectlocal7F1C2859": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "mywebsocketapilocal2071B21B"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":apigateway:",
       {
        "Ref": "AWS::Region"
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "connectlocal190D4238",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-websocket-api-local/$connect-Route/connect-local/Resource"
   }
  },
  "mywebsocketapilocalconnectRoute77B7F6F7": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "mywebsocketapilocal2071B21B"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "$connect",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "mywebsocketapilocalconnectRouteconnectlocal7F1C2859"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-websocket-api-local/$connect-Route/Resource"
   }
  },
  "mywebsocketapilocaldisconnectRoutedisconnectlocalPermissionFADEE1ED": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "disconnectlocal73EF9116",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "mywebsocketapilocal2071B21B"
       },
       "/*$disconnect"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-websocket-api-local/$disconnect-Route/disconnect-local-Permission"
   }
  },
  "mywebsocketapilocaldisconnectRoutedisconnectlocalD116085D": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "mywebsocketapilocal2071B21B"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":apigateway:",
       {
        "Ref": "AWS::Region"
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "disconnectlocal73EF9116",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-websocket-api-local/$disconnect-Route/disconnect-local/Resource"
   }
  },
  "mywebsocketapilocaldisconnectRouteF1C8BE4C": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "mywebsocketapilocal2071B21B"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "$disconnect",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "mywebsocketapilocaldisconnectRoutedisconnectlocalD116085D"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-websocket-api-local/$disconnect-Route/Resource"
   }
  },
  "mywebsocketapilocaldefaultRoutedefaultlocalPermission16AB23DC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "defaultlocalD20E00DC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "mywebsocketapilocal2071B21B"
       },
       "/*$default"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-websocket-api-local/$default-Route/default-local-Permission"
   }
  },
  "mywebsocketapilocaldefaultRoutedefaultlocal807CF6C7": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "mywebsocketapilocal2071B21B"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":apigateway:",
       {
        "Ref": "AWS::Region"
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "defaultlocalD20E00DC",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-websocket-api-local/$default-Route/default-local/Resource"
   }
  },
  "mywebsocketapilocaldefaultRouteFBEE2CE1": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "mywebsocketapilocal2071B21B"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "$default",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "mywebsocketapilocaldefaultRoutedefaultlocal807CF6C7"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-websocket-api-local/$default-Route/Resource"
   }
  },
  "mywebsocketapiselfstageStageA356601C": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "mywebsocketapilocal2071B21B"
    },
    "AutoDeploy": true,
    "StageName": "local"
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/my-websocket-api-${self.stage}-Stage/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/12QUW+CUAyFf4vv2KFm8RldTPawbMElezQFOqzAvYT2Shzhvy8XcTKfzjlt037pEhbrNYQzbGWeZsW85AS6vWJaBNjKoSuxSjKEbudMqmxNsP02U/9BTcUibE0fMFbQxbYk3/DaB7I6oAipQOQlkBVsXFqQblAowJpzVGrxAt2nLchETo+24R9q/IpJikk0qnlYPNoXqkt7qcior07SXjEfEK4mJrGuSWm4+EZ6tJlvju7WHTcPvp+AnZfQfVGytx56JPDyV4utU7rHV6OUN3h7z0N8GP5P2vd3muFbvsom9wPvTmunU0jvt9ZkrMPvjc0ITvJ0XoaweIZwdhLmeeOMckUQX/UX35V1uu0BAAA="
   },
   "Metadata": {
    "aws:cdk:path": "test-cdk-serverless-local/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "myserverlessapplocalEndpoint169F5502": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "myserverlessapplocal75227048"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "myserverlessapplocalDeploymentStagelocalBD3EBF93"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}